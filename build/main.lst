ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
  20              		.align	2
  21              		.global	HAL_GPIO_EXTI_Callback
  22              		.code	16
  23              		.thumb_func
  25              	HAL_GPIO_EXTI_Callback:
  26              	.LFB42:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  21:Src/main.c    **** #include "main.h"
  22:Src/main.c    **** #include "i2c.h"
  23:Src/main.c    **** #include "gpio.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** // #include "math.h"
  28:Src/main.c    **** #include "oled.h"
  29:Src/main.c    **** // #include "bmp.h"
  30:Src/main.c    **** #include "max44009.h"
  31:Src/main.c    **** #include "bh1730.h"
ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s 			page 2


  32:Src/main.c    **** // #include "shutter.h"
  33:Src/main.c    **** // #include "motor.h"
  34:Src/main.c    **** // #include "flash.h"
  35:Src/main.c    **** // #include "utils.h"
  36:Src/main.c    **** #include "stm32f0xx_it.h"
  37:Src/main.c    **** // #include "stm32f0xx_lp_modes.h"
  38:Src/main.c    **** /* USER CODE END Includes */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PTD */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE END PTD */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  46:Src/main.c    **** /* USER CODE BEGIN PD */
  47:Src/main.c    **** // #define VREFINT_CAL_ADDR ((uint16_t*)((uint32_t)0x1FFFF7BA))
  48:Src/main.c    **** /* USER CODE END PD */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  51:Src/main.c    **** /* USER CODE BEGIN PM */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE END PM */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE BEGIN PV */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END PV */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  62:Src/main.c    **** void SystemClock_Config(void);
  63:Src/main.c    **** /* USER CODE BEGIN PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PFP */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  68:Src/main.c    **** /* USER CODE BEGIN 0 */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE END 0 */
  71:Src/main.c    **** 
  72:Src/main.c    **** /**
  73:Src/main.c    ****   * @brief  The application entry point.
  74:Src/main.c    ****   * @retval int
  75:Src/main.c    ****   */
  76:Src/main.c    **** int main(void)
  77:Src/main.c    **** {
  78:Src/main.c    ****   /* USER CODE BEGIN 1 */
  79:Src/main.c    ****   // double brightness =0;  
  80:Src/main.c    ****   /* USER CODE END 1 */
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Src/main.c    ****   HAL_Init();
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE BEGIN Init */
  88:Src/main.c    **** 
ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s 			page 3


  89:Src/main.c    ****   /* USER CODE END Init */
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* Configure the system clock */
  92:Src/main.c    ****   SystemClock_Config();
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE END SysInit */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Initialize all configured peripherals */
  99:Src/main.c    ****   MX_GPIO_Init();
 100:Src/main.c    ****   MX_I2C2_Init();
 101:Src/main.c    ****   /* USER CODE BEGIN 2 */
 102:Src/main.c    ****   OLED_Init();
 103:Src/main.c    ****   /* USER CODE END 2 */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* Infinite loop */
 106:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 107:Src/main.c    ****   
 108:Src/main.c    ****   uint32_t lux = 0;
 109:Src/main.c    ****   
 110:Src/main.c    ****   while (1)
 111:Src/main.c    ****   {
 112:Src/main.c    ****     /* USER CODE END WHILE */
 113:Src/main.c    **** 
 114:Src/main.c    ****     /* USER CODE BEGIN 3 */
 115:Src/main.c    ****     
 116:Src/main.c    ****       // OLED_ShowString(0, 0, "BH1730 TEST", 12, 1);
 117:Src/main.c    ****       // OLED_ShowNum(72, 24, film, 2, 16, 1);
 118:Src/main.c    ****       // OLED_Refresh();
 119:Src/main.c    ****       // LED1_1;      
 120:Src/main.c    ****       // HAL_Delay(1000);
 121:Src/main.c    ****       // LED1_0;
 122:Src/main.c    ****       // HAL_Delay(1000);
 123:Src/main.c    ****            
 124:Src/main.c    **** 
 125:Src/main.c    ****       OLED_ShowString(0, 0, "BH1730", 12, 1);
 126:Src/main.c    ****       // OLED_ShowNum(72, 24, film, 2, 16, 1);
 127:Src/main.c    ****       OLED_Refresh();
 128:Src/main.c    **** 
 129:Src/main.c    ****       lux = BH1730_GetLux(); 
 130:Src/main.c    ****       OLED_ShowNum(0, 20, lux, 10, 12, 1);
 131:Src/main.c    ****       OLED_Refresh();
 132:Src/main.c    ****       HAL_Delay(1500);
 133:Src/main.c    ****       OLED_Clear();
 134:Src/main.c    ****   }
 135:Src/main.c    ****   /* USER CODE END 3 */
 136:Src/main.c    **** }
 137:Src/main.c    **** 
 138:Src/main.c    **** /**
 139:Src/main.c    ****   * @brief System Clock Configuration
 140:Src/main.c    ****   * @retval None
 141:Src/main.c    ****   */
 142:Src/main.c    **** void SystemClock_Config(void)
 143:Src/main.c    **** {
 144:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 145:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s 			page 4


 146:Src/main.c    **** 
 147:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 148:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 149:Src/main.c    ****   */
 150:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 151:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 156:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 157:Src/main.c    ****   {
 158:Src/main.c    ****     Error_Handler();
 159:Src/main.c    ****   }
 160:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 161:Src/main.c    ****   */
 162:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 163:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 164:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 165:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 166:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 167:Src/main.c    **** 
 168:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 169:Src/main.c    ****   {
 170:Src/main.c    ****     Error_Handler();
 171:Src/main.c    ****   }
 172:Src/main.c    ****   /** Enables the Clock Security System
 173:Src/main.c    ****   */
 174:Src/main.c    ****   HAL_RCC_EnableCSS();
 175:Src/main.c    **** }
 176:Src/main.c    **** 
 177:Src/main.c    **** /* USER CODE BEGIN 4 */
 178:Src/main.c    **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 179:Src/main.c    **** {  
  28              		.loc 1 179 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 180:Src/main.c    ****   // if (GPIO_Pin == CNTER_IN_Pin)
 181:Src/main.c    ****   // {
 182:Src/main.c    ****   //   film = 10;
 183:Src/main.c    ****   // }
 184:Src/main.c    **** }
  34              		.loc 1 184 0
  35              		@ sp needed
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE42:
  40 0002 C046     		.section	.text.Error_Handler,"ax",%progbits
  41              		.align	2
  42              		.global	Error_Handler
  43              		.code	16
  44              		.thumb_func
  46              	Error_Handler:
  47              	.LFB43:
ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s 			page 5


 185:Src/main.c    **** /* USER CODE END 4 */
 186:Src/main.c    **** 
 187:Src/main.c    **** /**
 188:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 189:Src/main.c    ****   * @retval None
 190:Src/main.c    ****   */
 191:Src/main.c    **** void Error_Handler(void)
 192:Src/main.c    **** {
  48              		.loc 1 192 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52 0000 70B5     		push	{r4, r5, r6, lr}
  53              	.LCFI0:
  54              		.cfi_def_cfa_offset 16
  55              		.cfi_offset 4, -16
  56              		.cfi_offset 5, -12
  57              		.cfi_offset 6, -8
  58              		.cfi_offset 14, -4
 193:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 194:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 195:Src/main.c    ****   LED1_0;
  59              		.loc 1 195 0
  60 0002 8025     		movs	r5, #128
  61 0004 6D00     		lsls	r5, r5, #1
  62 0006 9024     		movs	r4, #144
  63 0008 E405     		lsls	r4, r4, #23
  64 000a 0122     		movs	r2, #1
  65 000c 2900     		movs	r1, r5
  66 000e 2000     		movs	r0, r4
  67 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
  68              	.LVL1:
 196:Src/main.c    ****   HAL_Delay(200);
  69              		.loc 1 196 0
  70 0014 C820     		movs	r0, #200
  71 0016 FFF7FEFF 		bl	HAL_Delay
  72              	.LVL2:
 197:Src/main.c    ****   LED1_1;
  73              		.loc 1 197 0
  74 001a 0022     		movs	r2, #0
  75 001c 2900     		movs	r1, r5
  76 001e 2000     		movs	r0, r4
  77 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
  78              	.LVL3:
 198:Src/main.c    ****   HAL_Delay(200);
  79              		.loc 1 198 0
  80 0024 C820     		movs	r0, #200
  81 0026 FFF7FEFF 		bl	HAL_Delay
  82              	.LVL4:
 199:Src/main.c    ****   LED1_0;
  83              		.loc 1 199 0
  84 002a 0122     		movs	r2, #1
  85 002c 2900     		movs	r1, r5
  86 002e 2000     		movs	r0, r4
  87 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL5:
 200:Src/main.c    ****   HAL_Delay(200);
ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s 			page 6


  89              		.loc 1 200 0
  90 0034 C820     		movs	r0, #200
  91 0036 FFF7FEFF 		bl	HAL_Delay
  92              	.LVL6:
 201:Src/main.c    ****   // LED1_1;
 202:Src/main.c    ****   // HAL_Delay(200);
 203:Src/main.c    ****   // LED1_0;
 204:Src/main.c    ****   // HAL_Delay(200);
 205:Src/main.c    ****   // LED1_1;
 206:Src/main.c    ****   // HAL_Delay(200);
 207:Src/main.c    ****   // LED1_0;
 208:Src/main.c    ****   // HAL_Delay(200);
 209:Src/main.c    ****   // LED1_1;
 210:Src/main.c    ****   // HAL_Delay(200);
 211:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 212:Src/main.c    **** }
  93              		.loc 1 212 0
  94              		@ sp needed
  95 003a 70BD     		pop	{r4, r5, r6, pc}
  96              		.cfi_endproc
  97              	.LFE43:
  99              		.section	.text.SystemClock_Config,"ax",%progbits
 100              		.align	2
 101              		.global	SystemClock_Config
 102              		.code	16
 103              		.thumb_func
 105              	SystemClock_Config:
 106              	.LFB41:
 143:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 107              		.loc 1 143 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 64
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111 0000 00B5     		push	{lr}
 112              	.LCFI1:
 113              		.cfi_def_cfa_offset 4
 114              		.cfi_offset 14, -4
 115 0002 91B0     		sub	sp, sp, #68
 116              	.LCFI2:
 117              		.cfi_def_cfa_offset 72
 144:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 118              		.loc 1 144 0
 119 0004 3022     		movs	r2, #48
 120 0006 0021     		movs	r1, #0
 121 0008 04A8     		add	r0, sp, #16
 122 000a FFF7FEFF 		bl	memset
 123              	.LVL7:
 145:Src/main.c    **** 
 124              		.loc 1 145 0
 125 000e 1022     		movs	r2, #16
 126 0010 0021     		movs	r1, #0
 127 0012 6846     		mov	r0, sp
 128 0014 FFF7FEFF 		bl	memset
 129              	.LVL8:
 150:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 130              		.loc 1 150 0
 131 0018 0123     		movs	r3, #1
ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s 			page 7


 132 001a 0493     		str	r3, [sp, #16]
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 133              		.loc 1 151 0
 134 001c 0593     		str	r3, [sp, #20]
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 135              		.loc 1 152 0
 136 001e 0133     		adds	r3, r3, #1
 137 0020 0C93     		str	r3, [sp, #48]
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 138              		.loc 1 153 0
 139 0022 8023     		movs	r3, #128
 140 0024 5B02     		lsls	r3, r3, #9
 141 0026 0D93     		str	r3, [sp, #52]
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 142              		.loc 1 154 0
 143 0028 8023     		movs	r3, #128
 144 002a 5B03     		lsls	r3, r3, #13
 145 002c 0E93     		str	r3, [sp, #56]
 156:Src/main.c    ****   {
 146              		.loc 1 156 0
 147 002e 04A8     		add	r0, sp, #16
 148 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 149              	.LVL9:
 150 0034 0028     		cmp	r0, #0
 151 0036 01D0     		beq	.L4
 158:Src/main.c    ****   }
 152              		.loc 1 158 0
 153 0038 FFF7FEFF 		bl	Error_Handler
 154              	.LVL10:
 155              	.L4:
 162:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 156              		.loc 1 162 0
 157 003c 0723     		movs	r3, #7
 158 003e 0093     		str	r3, [sp]
 164:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 159              		.loc 1 164 0
 160 0040 053B     		subs	r3, r3, #5
 161 0042 0193     		str	r3, [sp, #4]
 165:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 162              		.loc 1 165 0
 163 0044 0023     		movs	r3, #0
 164 0046 0293     		str	r3, [sp, #8]
 166:Src/main.c    **** 
 165              		.loc 1 166 0
 166 0048 0393     		str	r3, [sp, #12]
 168:Src/main.c    ****   {
 167              		.loc 1 168 0
 168 004a 0121     		movs	r1, #1
 169 004c 6846     		mov	r0, sp
 170 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 171              	.LVL11:
 172 0052 0028     		cmp	r0, #0
 173 0054 01D0     		beq	.L5
 170:Src/main.c    ****   }
 174              		.loc 1 170 0
 175 0056 FFF7FEFF 		bl	Error_Handler
 176              	.LVL12:
ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s 			page 8


 177              	.L5:
 174:Src/main.c    **** }
 178              		.loc 1 174 0
 179 005a FFF7FEFF 		bl	HAL_RCC_EnableCSS
 180              	.LVL13:
 175:Src/main.c    **** 
 181              		.loc 1 175 0
 182 005e 11B0     		add	sp, sp, #68
 183              		@ sp needed
 184 0060 00BD     		pop	{pc}
 185              		.cfi_endproc
 186              	.LFE41:
 188 0062 C046     		.section	.text.main,"ax",%progbits
 189              		.align	2
 190              		.global	main
 191              		.code	16
 192              		.thumb_func
 194              	main:
 195              	.LFB40:
  77:Src/main.c    ****   /* USER CODE BEGIN 1 */
 196              		.loc 1 77 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200 0000 10B5     		push	{r4, lr}
 201              	.LCFI3:
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 4, -8
 204              		.cfi_offset 14, -4
 205 0002 82B0     		sub	sp, sp, #8
 206              	.LCFI4:
 207              		.cfi_def_cfa_offset 16
  85:Src/main.c    **** 
 208              		.loc 1 85 0
 209 0004 FFF7FEFF 		bl	HAL_Init
 210              	.LVL14:
  92:Src/main.c    **** 
 211              		.loc 1 92 0
 212 0008 FFF7FEFF 		bl	SystemClock_Config
 213              	.LVL15:
  99:Src/main.c    ****   MX_I2C2_Init();
 214              		.loc 1 99 0
 215 000c FFF7FEFF 		bl	MX_GPIO_Init
 216              	.LVL16:
 100:Src/main.c    ****   /* USER CODE BEGIN 2 */
 217              		.loc 1 100 0
 218 0010 FFF7FEFF 		bl	MX_I2C2_Init
 219              	.LVL17:
 102:Src/main.c    ****   /* USER CODE END 2 */
 220              		.loc 1 102 0
 221 0014 FFF7FEFF 		bl	OLED_Init
 222              	.LVL18:
 223              	.L7:
 125:Src/main.c    ****       // OLED_ShowNum(72, 24, film, 2, 16, 1);
 224              		.loc 1 125 0 discriminator 1
 225 0018 0124     		movs	r4, #1
 226 001a 0094     		str	r4, [sp]
ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s 			page 9


 227 001c 0C23     		movs	r3, #12
 228 001e 0D4A     		ldr	r2, .L8
 229 0020 0021     		movs	r1, #0
 230 0022 0020     		movs	r0, #0
 231 0024 FFF7FEFF 		bl	OLED_ShowString
 232              	.LVL19:
 127:Src/main.c    **** 
 233              		.loc 1 127 0 discriminator 1
 234 0028 FFF7FEFF 		bl	OLED_Refresh
 235              	.LVL20:
 129:Src/main.c    ****       OLED_ShowNum(0, 20, lux, 10, 12, 1);
 236              		.loc 1 129 0 discriminator 1
 237 002c FFF7FEFF 		bl	BH1730_GetLux
 238              	.LVL21:
 239 0030 0200     		movs	r2, r0
 240              	.LVL22:
 130:Src/main.c    ****       OLED_Refresh();
 241              		.loc 1 130 0 discriminator 1
 242 0032 0194     		str	r4, [sp, #4]
 243 0034 0C23     		movs	r3, #12
 244 0036 0093     		str	r3, [sp]
 245 0038 023B     		subs	r3, r3, #2
 246 003a 1421     		movs	r1, #20
 247 003c 0020     		movs	r0, #0
 248              	.LVL23:
 249 003e FFF7FEFF 		bl	OLED_ShowNum
 250              	.LVL24:
 131:Src/main.c    ****       HAL_Delay(1500);
 251              		.loc 1 131 0 discriminator 1
 252 0042 FFF7FEFF 		bl	OLED_Refresh
 253              	.LVL25:
 132:Src/main.c    ****       OLED_Clear();
 254              		.loc 1 132 0 discriminator 1
 255 0046 0448     		ldr	r0, .L8+4
 256 0048 FFF7FEFF 		bl	HAL_Delay
 257              	.LVL26:
 133:Src/main.c    ****   }
 258              		.loc 1 133 0 discriminator 1
 259 004c FFF7FEFF 		bl	OLED_Clear
 260              	.LVL27:
 261 0050 E2E7     		b	.L7
 262              	.L9:
 263 0052 C046     		.align	2
 264              	.L8:
 265 0054 00000000 		.word	.LC0
 266 0058 DC050000 		.word	1500
 267              		.cfi_endproc
 268              	.LFE40:
 270              		.section	.rodata.str1.4,"aMS",%progbits,1
 271              		.align	2
 272              	.LC0:
 273 0000 42483137 		.ascii	"BH1730\000"
 273      333000
 274              		.text
 275              	.Letext0:
 276              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 277              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s 			page 10


 278              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x8.h"
 279              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 280              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 281              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 282              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 283              		.file 9 "Inc/gpio.h"
 284              		.file 10 "Inc/i2c.h"
 285              		.file 11 "Inc/oled.h"
 286              		.file 12 "Inc/bh1730.h"
ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s:20     .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s:25     .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s:41     .text.Error_Handler:00000000 $t
C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s:46     .text.Error_Handler:00000000 Error_Handler
C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s:100    .text.SystemClock_Config:00000000 $t
C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s:105    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s:189    .text.main:00000000 $t
C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s:194    .text.main:00000000 main
C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s:265    .text.main:00000054 $d
C:\Users\bnusw\AppData\Local\Temp\ccsWxXoV.s:271    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_Delay
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_EnableCSS
HAL_Init
MX_GPIO_Init
MX_I2C2_Init
OLED_Init
OLED_ShowString
OLED_Refresh
BH1730_GetLux
OLED_ShowNum
OLED_Clear
