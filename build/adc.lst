ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccTFKjvC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"adc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_ADC_Init,"ax",%progbits
  20              		.align	2
  21              		.global	MX_ADC_Init
  22              		.code	16
  23              		.thumb_func
  25              	MX_ADC_Init:
  26              	.LFB40:
  27              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   * @attention
   8:Src/adc.c     ****   *
   9:Src/adc.c     ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/adc.c     ****   * All rights reserved.</center></h2>
  11:Src/adc.c     ****   *
  12:Src/adc.c     ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/adc.c     ****   * the "License"; You may not use this file except in compliance with the
  14:Src/adc.c     ****   * License. You may obtain a copy of the License at:
  15:Src/adc.c     ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/adc.c     ****   *
  17:Src/adc.c     ****   ******************************************************************************
  18:Src/adc.c     ****   */
  19:Src/adc.c     **** 
  20:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/adc.c     **** #include "adc.h"
  22:Src/adc.c     **** 
  23:Src/adc.c     **** /* USER CODE BEGIN 0 */
  24:Src/adc.c     **** 
  25:Src/adc.c     **** /* USER CODE END 0 */
  26:Src/adc.c     **** 
  27:Src/adc.c     **** ADC_HandleTypeDef hadc;
  28:Src/adc.c     **** DMA_HandleTypeDef hdma_adc;
  29:Src/adc.c     **** 
  30:Src/adc.c     **** /* ADC init function */
  31:Src/adc.c     **** void MX_ADC_Init(void)
ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccTFKjvC.s 			page 2


  32:Src/adc.c     **** {
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  33:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
  39              		.loc 1 33 0
  40 0004 0C22     		movs	r2, #12
  41 0006 0021     		movs	r1, #0
  42 0008 01A8     		add	r0, sp, #4
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
  34:Src/adc.c     **** 
  35:Src/adc.c     ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
  36:Src/adc.c     ****   */
  37:Src/adc.c     ****   hadc.Instance = ADC1;
  45              		.loc 1 37 0
  46 000e 1C48     		ldr	r0, .L5
  47 0010 1C4B     		ldr	r3, .L5+4
  48 0012 0360     		str	r3, [r0]
  38:Src/adc.c     ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
  49              		.loc 1 38 0
  50 0014 8023     		movs	r3, #128
  51 0016 1B06     		lsls	r3, r3, #24
  52 0018 4360     		str	r3, [r0, #4]
  39:Src/adc.c     ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
  53              		.loc 1 39 0
  54 001a 0022     		movs	r2, #0
  55 001c 8260     		str	r2, [r0, #8]
  40:Src/adc.c     ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  56              		.loc 1 40 0
  57 001e C260     		str	r2, [r0, #12]
  41:Src/adc.c     ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
  58              		.loc 1 41 0
  59 0020 0123     		movs	r3, #1
  60 0022 0361     		str	r3, [r0, #16]
  42:Src/adc.c     ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  61              		.loc 1 42 0
  62 0024 0421     		movs	r1, #4
  63 0026 4161     		str	r1, [r0, #20]
  43:Src/adc.c     ****   hadc.Init.LowPowerAutoWait = ENABLE;
  64              		.loc 1 43 0
  65 0028 0376     		strb	r3, [r0, #24]
  44:Src/adc.c     ****   hadc.Init.LowPowerAutoPowerOff = ENABLE;
  66              		.loc 1 44 0
  67 002a 4376     		strb	r3, [r0, #25]
  45:Src/adc.c     ****   hadc.Init.ContinuousConvMode = ENABLE;
  68              		.loc 1 45 0
  69 002c 8376     		strb	r3, [r0, #26]
  46:Src/adc.c     ****   hadc.Init.DiscontinuousConvMode = DISABLE;
ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccTFKjvC.s 			page 3


  70              		.loc 1 46 0
  71 002e C276     		strb	r2, [r0, #27]
  47:Src/adc.c     ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  72              		.loc 1 47 0
  73 0030 C221     		movs	r1, #194
  74 0032 FF31     		adds	r1, r1, #255
  75 0034 C161     		str	r1, [r0, #28]
  48:Src/adc.c     ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  76              		.loc 1 48 0
  77 0036 0262     		str	r2, [r0, #32]
  49:Src/adc.c     ****   hadc.Init.DMAContinuousRequests = ENABLE;
  78              		.loc 1 49 0
  79 0038 2432     		adds	r2, r2, #36
  80 003a 8354     		strb	r3, [r0, r2]
  50:Src/adc.c     ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
  81              		.loc 1 50 0
  82 003c 8362     		str	r3, [r0, #40]
  51:Src/adc.c     ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
  83              		.loc 1 51 0
  84 003e FFF7FEFF 		bl	HAL_ADC_Init
  85              	.LVL1:
  86 0042 0028     		cmp	r0, #0
  87 0044 01D0     		beq	.L2
  52:Src/adc.c     ****   {
  53:Src/adc.c     ****     Error_Handler();
  88              		.loc 1 53 0
  89 0046 FFF7FEFF 		bl	Error_Handler
  90              	.LVL2:
  91              	.L2:
  54:Src/adc.c     ****   }
  55:Src/adc.c     ****   /** Configure for the selected ADC regular channel to be converted. 
  56:Src/adc.c     ****   */
  57:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_1;
  92              		.loc 1 57 0
  93 004a 0123     		movs	r3, #1
  94 004c 0193     		str	r3, [sp, #4]
  58:Src/adc.c     ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
  95              		.loc 1 58 0
  96 004e 8023     		movs	r3, #128
  97 0050 5B01     		lsls	r3, r3, #5
  98 0052 0293     		str	r3, [sp, #8]
  59:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_55CYCLES_5;
  99              		.loc 1 59 0
 100 0054 0523     		movs	r3, #5
 101 0056 0393     		str	r3, [sp, #12]
  60:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 102              		.loc 1 60 0
 103 0058 01A9     		add	r1, sp, #4
 104 005a 0948     		ldr	r0, .L5
 105 005c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 106              	.LVL3:
 107 0060 0028     		cmp	r0, #0
 108 0062 01D0     		beq	.L3
  61:Src/adc.c     ****   {
  62:Src/adc.c     ****     Error_Handler();
 109              		.loc 1 62 0
 110 0064 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccTFKjvC.s 			page 4


 111              	.LVL4:
 112              	.L3:
  63:Src/adc.c     ****   }
  64:Src/adc.c     ****   /** Configure for the selected ADC regular channel to be converted. 
  65:Src/adc.c     ****   */
  66:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_VREFINT;
 113              		.loc 1 66 0
 114 0068 1123     		movs	r3, #17
 115 006a 0193     		str	r3, [sp, #4]
  67:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 116              		.loc 1 67 0
 117 006c 01A9     		add	r1, sp, #4
 118 006e 0448     		ldr	r0, .L5
 119 0070 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 120              	.LVL5:
 121 0074 0028     		cmp	r0, #0
 122 0076 01D0     		beq	.L1
  68:Src/adc.c     ****   {
  69:Src/adc.c     ****     Error_Handler();
 123              		.loc 1 69 0
 124 0078 FFF7FEFF 		bl	Error_Handler
 125              	.LVL6:
 126              	.L1:
  70:Src/adc.c     ****   }
  71:Src/adc.c     **** 
  72:Src/adc.c     **** }
 127              		.loc 1 72 0
 128 007c 05B0     		add	sp, sp, #20
 129              		@ sp needed
 130 007e 00BD     		pop	{pc}
 131              	.L6:
 132              		.align	2
 133              	.L5:
 134 0080 00000000 		.word	hadc
 135 0084 00240140 		.word	1073816576
 136              		.cfi_endproc
 137              	.LFE40:
 139              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 140              		.align	2
 141              		.global	HAL_ADC_MspInit
 142              		.code	16
 143              		.thumb_func
 145              	HAL_ADC_MspInit:
 146              	.LFB41:
  73:Src/adc.c     **** 
  74:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
  75:Src/adc.c     **** {
 147              		.loc 1 75 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 32
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              	.LVL7:
 152 0000 10B5     		push	{r4, lr}
 153              	.LCFI2:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
 156              		.cfi_offset 14, -4
ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccTFKjvC.s 			page 5


 157 0002 88B0     		sub	sp, sp, #32
 158              	.LCFI3:
 159              		.cfi_def_cfa_offset 40
 160 0004 0400     		movs	r4, r0
  76:Src/adc.c     **** 
  77:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 161              		.loc 1 77 0
 162 0006 1422     		movs	r2, #20
 163 0008 0021     		movs	r1, #0
 164 000a 03A8     		add	r0, sp, #12
 165              	.LVL8:
 166 000c FFF7FEFF 		bl	memset
 167              	.LVL9:
  78:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 168              		.loc 1 78 0
 169 0010 1E4B     		ldr	r3, .L10
 170 0012 2268     		ldr	r2, [r4]
 171 0014 9A42     		cmp	r2, r3
 172 0016 36D1     		bne	.L7
 173              	.LBB2:
  79:Src/adc.c     ****   {
  80:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
  81:Src/adc.c     **** 
  82:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
  83:Src/adc.c     ****     /* ADC1 clock enable */
  84:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_ENABLE();
 174              		.loc 1 84 0
 175 0018 1D4B     		ldr	r3, .L10+4
 176 001a 9969     		ldr	r1, [r3, #24]
 177 001c 8022     		movs	r2, #128
 178 001e 9200     		lsls	r2, r2, #2
 179 0020 1143     		orrs	r1, r2
 180 0022 9961     		str	r1, [r3, #24]
 181 0024 9969     		ldr	r1, [r3, #24]
 182 0026 0A40     		ands	r2, r1
 183 0028 0192     		str	r2, [sp, #4]
 184 002a 019A     		ldr	r2, [sp, #4]
 185              	.LBE2:
 186              	.LBB3:
  85:Src/adc.c     ****   
  86:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 187              		.loc 1 86 0
 188 002c 5969     		ldr	r1, [r3, #20]
 189 002e 8022     		movs	r2, #128
 190 0030 9202     		lsls	r2, r2, #10
 191 0032 1143     		orrs	r1, r2
 192 0034 5961     		str	r1, [r3, #20]
 193 0036 5B69     		ldr	r3, [r3, #20]
 194 0038 1A40     		ands	r2, r3
 195 003a 0292     		str	r2, [sp, #8]
 196 003c 029B     		ldr	r3, [sp, #8]
 197              	.LBE3:
  87:Src/adc.c     ****     /**ADC GPIO Configuration    
  88:Src/adc.c     ****     PA1     ------> ADC_IN1 
  89:Src/adc.c     ****     */
  90:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_1;
 198              		.loc 1 90 0
ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccTFKjvC.s 			page 6


 199 003e 0223     		movs	r3, #2
 200 0040 0393     		str	r3, [sp, #12]
  91:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 201              		.loc 1 91 0
 202 0042 0133     		adds	r3, r3, #1
 203 0044 0493     		str	r3, [sp, #16]
  92:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  93:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 204              		.loc 1 93 0
 205 0046 03A9     		add	r1, sp, #12
 206 0048 9020     		movs	r0, #144
 207 004a C005     		lsls	r0, r0, #23
 208 004c FFF7FEFF 		bl	HAL_GPIO_Init
 209              	.LVL10:
  94:Src/adc.c     **** 
  95:Src/adc.c     ****     /* ADC1 DMA Init */
  96:Src/adc.c     ****     /* ADC Init */
  97:Src/adc.c     ****     hdma_adc.Instance = DMA1_Channel1;
 210              		.loc 1 97 0
 211 0050 1048     		ldr	r0, .L10+8
 212 0052 114B     		ldr	r3, .L10+12
 213 0054 0360     		str	r3, [r0]
  98:Src/adc.c     ****     hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
 214              		.loc 1 98 0
 215 0056 0023     		movs	r3, #0
 216 0058 4360     		str	r3, [r0, #4]
  99:Src/adc.c     ****     hdma_adc.Init.PeriphInc = DMA_PINC_DISABLE;
 217              		.loc 1 99 0
 218 005a 8360     		str	r3, [r0, #8]
 100:Src/adc.c     ****     hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
 219              		.loc 1 100 0
 220 005c 8033     		adds	r3, r3, #128
 221 005e C360     		str	r3, [r0, #12]
 101:Src/adc.c     ****     hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 222              		.loc 1 101 0
 223 0060 8033     		adds	r3, r3, #128
 224 0062 0361     		str	r3, [r0, #16]
 102:Src/adc.c     ****     hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 225              		.loc 1 102 0
 226 0064 8023     		movs	r3, #128
 227 0066 DB00     		lsls	r3, r3, #3
 228 0068 4361     		str	r3, [r0, #20]
 103:Src/adc.c     ****     hdma_adc.Init.Mode = DMA_CIRCULAR;
 229              		.loc 1 103 0
 230 006a 2023     		movs	r3, #32
 231 006c 8361     		str	r3, [r0, #24]
 104:Src/adc.c     ****     hdma_adc.Init.Priority = DMA_PRIORITY_MEDIUM;
 232              		.loc 1 104 0
 233 006e 8023     		movs	r3, #128
 234 0070 5B01     		lsls	r3, r3, #5
 235 0072 C361     		str	r3, [r0, #28]
 105:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc) != HAL_OK)
 236              		.loc 1 105 0
 237 0074 FFF7FEFF 		bl	HAL_DMA_Init
 238              	.LVL11:
 239 0078 0028     		cmp	r0, #0
 240 007a 01D0     		beq	.L9
ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccTFKjvC.s 			page 7


 106:Src/adc.c     ****     {
 107:Src/adc.c     ****       Error_Handler();
 241              		.loc 1 107 0
 242 007c FFF7FEFF 		bl	Error_Handler
 243              	.LVL12:
 244              	.L9:
 108:Src/adc.c     ****     }
 109:Src/adc.c     **** 
 110:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc);
 245              		.loc 1 110 0
 246 0080 044B     		ldr	r3, .L10+8
 247 0082 2363     		str	r3, [r4, #48]
 248 0084 5C62     		str	r4, [r3, #36]
 249              	.L7:
 111:Src/adc.c     **** 
 112:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 113:Src/adc.c     **** 
 114:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 115:Src/adc.c     ****   }
 116:Src/adc.c     **** }
 250              		.loc 1 116 0
 251 0086 08B0     		add	sp, sp, #32
 252              		@ sp needed
 253              	.LVL13:
 254 0088 10BD     		pop	{r4, pc}
 255              	.L11:
 256 008a C046     		.align	2
 257              	.L10:
 258 008c 00240140 		.word	1073816576
 259 0090 00100240 		.word	1073876992
 260 0094 00000000 		.word	hdma_adc
 261 0098 08000240 		.word	1073872904
 262              		.cfi_endproc
 263              	.LFE41:
 265              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 266              		.align	2
 267              		.global	HAL_ADC_MspDeInit
 268              		.code	16
 269              		.thumb_func
 271              	HAL_ADC_MspDeInit:
 272              	.LFB42:
 117:Src/adc.c     **** 
 118:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 119:Src/adc.c     **** {
 273              		.loc 1 119 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              	.LVL14:
 278 0000 10B5     		push	{r4, lr}
 279              	.LCFI4:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 4, -8
 282              		.cfi_offset 14, -4
 283 0002 0400     		movs	r4, r0
 120:Src/adc.c     **** 
 121:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccTFKjvC.s 			page 8


 284              		.loc 1 121 0
 285 0004 084B     		ldr	r3, .L14
 286 0006 0268     		ldr	r2, [r0]
 287 0008 9A42     		cmp	r2, r3
 288 000a 0CD1     		bne	.L12
 122:Src/adc.c     ****   {
 123:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 124:Src/adc.c     **** 
 125:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 126:Src/adc.c     ****     /* Peripheral clock disable */
 127:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_DISABLE();
 289              		.loc 1 127 0
 290 000c 074A     		ldr	r2, .L14+4
 291 000e 9169     		ldr	r1, [r2, #24]
 292 0010 074B     		ldr	r3, .L14+8
 293 0012 0B40     		ands	r3, r1
 294 0014 9361     		str	r3, [r2, #24]
 128:Src/adc.c     ****   
 129:Src/adc.c     ****     /**ADC GPIO Configuration    
 130:Src/adc.c     ****     PA1     ------> ADC_IN1 
 131:Src/adc.c     ****     */
 132:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 295              		.loc 1 132 0
 296 0016 0221     		movs	r1, #2
 297 0018 9020     		movs	r0, #144
 298              	.LVL15:
 299 001a C005     		lsls	r0, r0, #23
 300 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 301              	.LVL16:
 133:Src/adc.c     **** 
 134:Src/adc.c     ****     /* ADC1 DMA DeInit */
 135:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 302              		.loc 1 135 0
 303 0020 206B     		ldr	r0, [r4, #48]
 304 0022 FFF7FEFF 		bl	HAL_DMA_DeInit
 305              	.LVL17:
 306              	.L12:
 136:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 137:Src/adc.c     **** 
 138:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 1 */
 139:Src/adc.c     ****   }
 140:Src/adc.c     **** } 
 307              		.loc 1 140 0
 308              		@ sp needed
 309              	.LVL18:
 310 0026 10BD     		pop	{r4, pc}
 311              	.L15:
 312              		.align	2
 313              	.L14:
 314 0028 00240140 		.word	1073816576
 315 002c 00100240 		.word	1073876992
 316 0030 FFFDFFFF 		.word	-513
 317              		.cfi_endproc
 318              	.LFE42:
 320              		.comm	hdma_adc,68,4
 321              		.comm	hadc,64,4
 322              		.text
ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccTFKjvC.s 			page 9


 323              	.Letext0:
 324              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 325              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 326              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x8.h"
 327              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 328              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 329              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 330              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 331              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 332              		.file 10 "Inc/main.h"
ARM GAS  C:\Users\bnusw\AppData\Local\Temp\ccTFKjvC.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
C:\Users\bnusw\AppData\Local\Temp\ccTFKjvC.s:20     .text.MX_ADC_Init:00000000 $t
C:\Users\bnusw\AppData\Local\Temp\ccTFKjvC.s:25     .text.MX_ADC_Init:00000000 MX_ADC_Init
C:\Users\bnusw\AppData\Local\Temp\ccTFKjvC.s:134    .text.MX_ADC_Init:00000080 $d
                            *COM*:00000040 hadc
C:\Users\bnusw\AppData\Local\Temp\ccTFKjvC.s:140    .text.HAL_ADC_MspInit:00000000 $t
C:\Users\bnusw\AppData\Local\Temp\ccTFKjvC.s:145    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\Users\bnusw\AppData\Local\Temp\ccTFKjvC.s:258    .text.HAL_ADC_MspInit:0000008c $d
                            *COM*:00000044 hdma_adc
C:\Users\bnusw\AppData\Local\Temp\ccTFKjvC.s:266    .text.HAL_ADC_MspDeInit:00000000 $t
C:\Users\bnusw\AppData\Local\Temp\ccTFKjvC.s:271    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\Users\bnusw\AppData\Local\Temp\ccTFKjvC.s:314    .text.HAL_ADC_MspDeInit:00000028 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
HAL_ADC_Init
Error_Handler
HAL_ADC_ConfigChannel
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
